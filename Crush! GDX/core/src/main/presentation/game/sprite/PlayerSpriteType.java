package main.presentation.game.sprite;

public enum PlayerSpriteType
{
	//currently unused:
	//98, etc. - sprite between knockback and shock_on
	
	//there might be a frame for picking up the ball (18:19)
	
	UNDEFINED_TYPE(-1, 0),
	PASSIVE_NW(0),
	WALK_BOTH_NW(1),
	SHOCK_OFF_NW(2),
	DOWN_NW(3),
	PASSIVE_N(4),
	WALK_BOTH_N(5),
	SHOCK_OFF_N(6),
	DOWN_N(7),
	PASSIVE_NE(8),
	WALK_BOTH_NE(9),
	SHOCK_OFF_NE(10),
	DOWN_NE(11),
	PASSIVE_E(12),
	WALK_BOTH_E(13),
	SHOCK_OFF_E(14),
	DOWN_E(15),
	PASSIVE_SE(16),
	WALK_BOTH_SE(17),
	SHOCK_OFF_SE(18),
	DOWN_SE(19),
	PASSIVE_S(20),
	WALK_BOTH_S(21),
	SHOCK_OFF_S(22),
	DOWN_S(23),
	PASSIVE_SW(24),
	WALK_BOTH_SW(25),
	SHOCK_OFF_SW(26),
	DOWN_SW(27),
	PASSIVE_W(28),
	WALK_BOTH_W(29),
	SHOCK_OFF_W(30),
	DOWN_W(31),
	WALK_LEFT_NW(32),
	WALK_RIGHT_NW(33),
	CHECK_WEAK_NW(34),
	CHECK_STRONG_NW(35),
	WALK_LEFT_N(36),
	WALK_RIGHT_N(37),
	CHECK_WEAK_N(38),
	CHECK_STRONG_N(39),
	WALK_LEFT_NE(40),
	WALK_RIGHT_NE(41),
	CHECK_WEAK_NE(42),
	CHECK_STRONG_NE(43),
	WALK_LEFT_E(44),
	WALK_RIGHT_E(45),
	CHECK_WEAK_E(46),
	CHECK_STRONG_E(47),
	WALK_LEFT_SE(48),
	WALK_RIGHT_SE(49),
	CHECK_WEAK_SE(50),
	CHECK_STRONG_SE(51),
	WALK_LEFT_S(52),
	WALK_RIGHT_S(53),
	CHECK_WEAK_S(54),
	CHECK_STRONG_S(55),
	WALK_LEFT_SW(56),
	WALK_RIGHT_SW(57),
	CHECK_WEAK_SW(58),
	CHECK_STRONG_SW(59),
	WALK_LEFT_W(60),
	WALK_RIGHT_W(61),
	CHECK_WEAK_W(62),
	CHECK_STRONG_W(63),
	
	//these also appear to be the middle frame of the jump animation
	CHECK_WINDUP_NW(65),
	CHECK_WINDUP_N(69),
	CHECK_WINDUP_NE(73),
	CHECK_WINDUP_E(77),
	CHECK_WINDUP_SE(81),
	CHECK_WINDUP_S(85),
	CHECK_WINDUP_SW(89),
	CHECK_WINDUP_W(93),
	
	//as above, probably also used in jump animation (though since there's no "swing arms back" when you have the ball, that might be a two-framer)
	CHECK_WINDUP_BALL_NW(128),
	CHECK_WINDUP_BALL_N(132),
	CHECK_WINDUP_BALL_NE(136),
	CHECK_WINDUP_BALL_E(140),
	CHECK_WINDUP_BALL_SE(144),
	CHECK_WINDUP_BALL_S(148),
	CHECK_WINDUP_BALL_SW(152),
	CHECK_WINDUP_BALL_W(156),
	
	//note that these are the same as the first knockback frame
	SIT_NW(96),
	SIT_N(100),
	SIT_NE(104),
	SIT_E(108),
	SIT_SE(112),
	SIT_S(116),
	SIT_SW(120),
	SIT_W(124),
	
	SHOCK_ON_NW(99),
	SHOCK_ON_N(103),
	SHOCK_ON_NE(107),
	SHOCK_ON_E(111),
	SHOCK_ON_SE(115),
	SHOCK_ON_S(119),
	SHOCK_ON_SW(123),
	SHOCK_ON_W(127),

	KNOCKBACK_KO1_NW(96),
	KNOCKBACK_KO2_NW(97),
	KNOCKBACK_KO1_N(100),
	KNOCKBACK_KO2_N(101),
	KNOCKBACK_KO1_NE(104),
	KNOCKBACK_KO2_NE(105),
	KNOCKBACK_KO1_E(108),
	KNOCKBACK_KO2_E(109),
	KNOCKBACK_KO1_SE(112),
	KNOCKBACK_KO2_SE(113),
	KNOCKBACK_KO1_S(116),
	KNOCKBACK_KO2_S(117),
	KNOCKBACK_KO1_SW(120),
	KNOCKBACK_KO2_SW(121),
	KNOCKBACK_KO1_W(124),
	KNOCKBACK_KO2_W(125),
	
	PASSIVE_BALL_NW(128),
	JUMP_SPRING_BALL_NW(129),
	HURL_BALL_NW(130),
	RECEIVE_BALL_FORWARD_NW(131),
	RECEIVE_BALL_BACK_NW(163),
	PASSIVE_BALL_N(132),
	JUMP_SPRING_BALL_N(133),
	HURL_BALL_N(134),
	RECEIVE_BALL_FORWARD_N(135),
	RECEIVE_BALL_BACK_N(167),
	PASSIVE_BALL_NE(136),
	JUMP_SPRING_BALL_NE(137),
	HURL_BALL_NE(138),
	RECEIVE_BALL_FORWARD_NE(139),
	RECEIVE_BALL_BACK_NE(171),
	PASSIVE_BALL_E(140),
	JUMP_SPRING_BALL_E(141),
	HURL_BALL_E(142),
	RECEIVE_BALL_FORWARD_E(143),
	RECEIVE_BALL_BACK_E(175),
	PASSIVE_BALL_SE(144),
	JUMP_SPRING_BALL_SE(145),
	HURL_BALL_SE(146),
	RECEIVE_BALL_FORWARD_SE(147),
	RECEIVE_BALL_BACK_SE(179),
	PASSIVE_BALL_S(148),
	JUMP_SPRING_BALL_S(149),
	HURL_BALL_S(150),
	RECEIVE_BALL_FORWARD_S(151),
	RECEIVE_BALL_BACK_S(183),
	PASSIVE_BALL_SW(152),
	JUMP_SPRING_BALL_SW(153),
	HURL_BALL_SW(154),
	RECEIVE_BALL_FORWARD_SW(155),
	RECEIVE_BALL_BACK_SW(187),
	PASSIVE_BALL_W(156),
	JUMP_SPRING_BALL_W(157),
	HURL_BALL_W(158),
	RECEIVE_BALL_FORWARD_W(159),
	RECEIVE_BALL_BACK_W(191),
	
	JUMP_WINDUP_NW(64),
	JUMP_SPRING_NW(65),
	JUMP_FLY_NW(66),
	INJURY_NW(67),
	JUMP_WINDUP_N(68),
	JUMP_SPRING_N(69),
	JUMP_FLY_N(70),
	INJURY_N(71),
	JUMP_WINDUP_NE(72),
	JUMP_SPRING_NE(73),
	JUMP_FLY_NE(74),
	INJURY_NE(75),
	JUMP_WINDUP_E(76),
	JUMP_SPRING_E(77),
	JUMP_FLY_E(78),
	INJURY_E(79),
	JUMP_WINDUP_SE(80),
	JUMP_SPRING_SE(81),
	JUMP_FLY_SE(82),
	INJURY_SE(83),
	JUMP_WINDUP_S(84),
	JUMP_SPRING_S(85),
	JUMP_FLY_S(86),
	INJURY_S(87),
	JUMP_WINDUP_SW(88),
	JUMP_SPRING_SW(89),
	JUMP_FLY_SW(90),
	INJURY_SW(91),
	JUMP_WINDUP_W(92),
	JUMP_SPRING_W(93),
	JUMP_FLY_W(94),
	INJURY_W(95),

	WALK_LEFT_BALL_NW(160),
	WALK_RIGHT_BALL_NW(161),
	WALK_BOTH_BALL_NW(162),
	JUMP_WINDUP_BALL_NW(163),
	WALK_LEFT_BALL_N(164),
	WALK_RIGHT_BALL_N(165),
	WALK_BOTH_BALL_N(166),
	JUMP_WINDUP_BALL_N(167),
	WALK_LEFT_BALL_NE(168),
	WALK_RIGHT_BALL_NE(169),
	WALK_BOTH_BALL_NE(170),
	JUMP_WINDUP_BALL_NE(171),
	WALK_LEFT_BALL_E(172),
	WALK_RIGHT_BALL_E(173),
	WALK_BOTH_BALL_E(174),
	JUMP_WINDUP_BALL_E(175),
	WALK_LEFT_BALL_SE(176),
	WALK_RIGHT_BALL_SE(177),
	WALK_BOTH_BALL_SE(178),
	JUMP_WINDUP_BALL_SE(179),
	WALK_LEFT_BALL_S(180),
	WALK_RIGHT_BALL_S(181),
	WALK_BOTH_BALL_S(182),
	JUMP_WINDUP_BALL_S(183),
	WALK_LEFT_BALL_SW(184),
	WALK_RIGHT_BALL_SW(185),
	WALK_BOTH_BALL_SW(186),
	JUMP_WINDUP_BALL_SW(187),
	WALK_LEFT_BALL_W(188),
	WALK_RIGHT_BALL_W(189),
	WALK_BOTH_BALL_W(190),
	JUMP_WINDUP_BALL_W(191);
	
	private int index;
	private int frames;
	
	private PlayerSpriteType(int index)
	{
		this (index, 1);
	}
	
	private PlayerSpriteType(int index, int frames)
	{
		this.index = index;
		this.frames = frames;
	}
	
	public int getIndex()
	{
		return index;
	}
	
	public int getFrames()
	{
		return frames;
	}
	
	public boolean isStatic()
	{
		return frames == 1;
	}
	
	public static PlayerSpriteType getPlayerSpriteType(int typeIndex)
	{
		for (PlayerSpriteType type : values())
		{
			if (type.index == typeIndex)
				return type;
		}
		
		return PlayerSpriteType.UNDEFINED_TYPE;
	}
	
	public static PlayerSpriteType getPlayerSpriteType(PlayerState state, Facing facing)
	{
		String enumName = state.name() + "_" + facing.name();
		return valueOf(enumName);
	}
}
